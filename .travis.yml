language: go

go:
  - '1.14'

before_install:
  - sudo apt-get install libpcap-dev

install:
  - go get golang.org/x/tools/cmd/cover
  - go get github.com/mattn/goveralls
  - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.23.6

script:
  - go test ./... -v -covermode=count -coverprofile=coverage.out
  - cat coverage.out | grep -v "main.go" | grep -v "hosts.go" | grep -v "ports.go" > cover.out
  - goveralls -coverprofile=cover.out -service=travis-ci
  - golangci-lint run

  - export PCAPV=1.9.1
  - wget http://www.tcpdump.org/release/libpcap-$PCAPV.tar.gz
  - tar xvf libpcap-$PCAPV.tar.gz
  - cd libpcap-$PCAPV
  - ./configure --with-pcap=linux
  - make
  - cd ..

  - CGO_ENABLED=1 GOARCH=amd64 GOOS=linux CGO_LDFLAGS+="-L./libpcap-$PCAPV" go build -ldflags="-s -w" -o out/netshark_linux_x86-64 .

  # TODO. MacOS build
  # - GOARCH=amd64 GOOS=darwin go build -o out/netshark_osx .

  - GOARCH=386 GOOS=windows go build -o out/netshark_win32.exe .
  - GOARCH=amd64 GOOS=windows go build -o out/netshark_win64.exe .

deploy:
  provider: releases
  api_key:
    secure: b+wKhRol8Qvh8ma1bHYHJQFjO5RYWL8sINayKTZ4Znt4m6pk6P+bDt/ChFJ+SRImUjfITc1fN9MFE2eGXiKxJPnFWhF0JMbrpsC1J0AJSbJmqxUjGKVyF0tG01yoSR6vS0Kh1n5RF0DDUh6mc7e9YNi4X/GbcdbV7E35Ilc9YvtH7q2XQI4pei5MZqLPkwzIu9NS8bnH9aPtJhSsv1pg97CcNRib9n8PZZRo1fuearELP5RHYaR+hhbKGXPFCwTSLLhJpBMLST5W+OVSZzVfa8sZ6ryiBgCttuN3G9VIC/o5sRIirtyQVy2NpE+ovq375jlkvFnQenzvMwemMU7dspoACPNfMDVlBBlQYTDg4XjYCtQqRhwVtHpG/9jcRToNrwto5PGf5h6sb/pXDJK+gvRfumMzFkN1j+r7hBp7ErIZVD9h/jh4lUuZpKNjfTuVMVP1JZFrUTP5ZN8MIicgswmpfUXcanS0bNMtrXRw6aoDZPXrWr2Wozsy+fTGTiH9qm0v1Tsa5MIf2KC1JR174pRRUTkPG8mUxb3sOSRVFsFbGotUzqPES9kzmXVwBvWViDeqqXIVy/YMkZTLT0s59hDjVV4OGDKLCNbsn3yD9WGF6K7faIDyy11FTVOO45d17dtzpjpoRZeySal6c+ZFyVZWywPHG1GWe1g22VxUNd0=
  file_glob: true
  file: out/*
  skip_cleanup: true
  on:
    tags: true
